# Data


## Description

For this project, we will draw on several key datasets from the U.S. Bureau of Labor Statistics (BLS). BLS is a federal agency that collects and disseminates various data about the U.S. economy and labor market.

The main dataset we will use comes out of the Current Population Survey (CPS). The CPS is a monthly survey conducted by the U.S. Census Bureau on behalf of the BLS, collecting data from approximately 60,000 eligible households across the United States. It provides detailed information on employment, earnings, demographic characteristics, and other labor market factors. Data is gathered through household interviews using a rotating panel design to ensure both consistency and coverage of the U.S. civilian noninstitutional population aged 16 and older. The CPS data includes a rich set of variables, such as employment status, wages, hours worked, and demographic factors like gender, ethnicity, and family structure (https://www.bls.gov/cps/earnings-faqs.htm#blscensus). The data we are looking at is aggregated yearly.

The data is available in multiple formats, including public-use files and through the BLS Public Data API, which offers programmatic access to time-series datasets. To streamline the data retrieval process, we will use the blsAPI package developed by Mike A. Silva, which simplifies API interactions in R. This package allows us to query specific series IDs, retrieve data in JSON format, and convert it into structured data frames for analysis. (https://github.com/mikeasilva/blsAPI).

A known challenge with the blsAPI package is the need to specify series IDs, which are alphanumeric codes that identify specific datasets (e.g., wage or employment data for a demographic group). These series IDs are published on the BLS website, but are not intuitive (e.g., "LNS14000003" is for the unemployment rate for women). This requires us to navigate complex BLS documentation and can lead to errors if the wrong ID is selected. To address this, we will carefully identify the correct series IDs using BLS resources and document them for transparency and reproducibility. Also, the BLS has information from 1979-2023 on its site, but the API only has access from 2003-2023.

The api pulls data in a way where we see the period the data was pulled for (timeframe and frequency) and the value of the data of interest. Again, the value of interest is based on the series ID, so we need to keep a careful mapping.

### Example Data Pull from blsAPI

Below is an example data pull from the blsAPI.

```{r}
# Install needed packages
install.packages("httr")
install.packages("jsonlite")
install.packages("dplyr")
install.packages("ggplot2")

library(httr)
library(jsonlite)
library(dplyr)
library(ggplot2)

install.packages("devtools")
remotes::install_github("mikeasilva/blsAPI")

library(blsAPI)

```

```{r}

# FMUP2378862 - Employment-population ratio - Women with own children 6 to 17, none younger

payload <- list(
  'seriesid' = c('FMUP2378862'),
  'startyear' = 2018,
  'endyear' = 2022
)
response <- blsAPI(payload)
parsed_data <- fromJSON(response)

res <- parsed_data$Results
series <- res$series
print(series$data)

```

## Missing value analysis




